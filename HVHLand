local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local speedEnabled = false
local flying = false
local camLocked = false
local targetHighlight = nil
local targetNameLabel = nil
local targetBox = nil
local menuOpen = false

-- Keybind for menu
local menuKeybind = Enum.KeyCode.M

-- Speed variables
local flySpeed = 50
local walkSpeed = 16
local predictionHorizontal = 0
local predictionVertical = 0

-- Color Definitions
local highlightColor = Color3.fromRGB(255, 0, 0)  -- Red
local outlineColor = Color3.fromRGB(255, 255, 0)  -- Yellow
local nameColor = Color3.fromRGB(0, 0, 0)          -- Black
local boxColor = Color3.fromRGB(0, 255, 0)         -- Green

-- GUI Elements
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

-- Username and password fields
local usernameLabel = Instance.new("TextLabel", screenGui)
usernameLabel.Text = "Username"
usernameLabel.Size = UDim2.new(0, 200, 0, 50)
usernameLabel.Position = UDim2.new(0.5, -100, 0.2, 0)

local usernameInput = Instance.new("TextBox", screenGui)
usernameInput.Name = "UsernameInput"
usernameInput.Size = UDim2.new(0, 200, 0, 50)
usernameInput.Position = UDim2.new(0.5, -100, 0.25, 0)
usernameInput.PlaceholderText = "………………"

local passwordLabel = Instance.new("TextLabel", screenGui)
passwordLabel.Text = "Password"
passwordLabel.Size = UDim2.new(0, 200, 0, 50)
passwordLabel.Position = UDim2.new(0.5, -100, 0.4, 0)

local passwordInput = Instance.new("TextBox", screenGui)
passwordInput.Name = "PasswordInput"
passwordInput.Size = UDim2.new(0, 200, 0, 50)
passwordInput.Position = UDim2.new(0.5, -100, 0.45, 0)
passwordInput.PlaceholderText = "………………"
passwordInput.TextTransparency = 1 -- To hide the password

local signUpButton = Instance.new("TextButton", screenGui)
signUpButton.Name = "SignUpButton"
signUpButton.Text = "Sign Up"
signUpButton.Size = UDim2.new(0, 200, 0, 50)
signUpButton.Position = UDim2.new(0.5, -100, 0.6, 0)

local messageLabel = Instance.new("TextLabel", screenGui)
messageLabel.Name = "MessageLabel"
messageLabel.Size = UDim2.new(0, 300, 0, 50)
messageLabel.Position = UDim2.new(0.5, -150, 0.75, 0)
messageLabel.TextColor3 = Color3.new(1, 0, 0) -- Red for error messages

-- Footer label
local footerLabel = Instance.new("TextLabel", screenGui)
footerLabel.Text = "Made by @Bl6gs"
footerLabel.Size = UDim2.new(0, 200, 0, 50)
footerLabel.Position = UDim2.new(0.01, 0, 0.9, 0) -- Bottom left corner
footerLabel.TextColor3 = Color3.new(1, 1, 1) -- White text

-- Fixed credentials
local validUsername = "Bl6gs"
local validPassword = "Blogs1337"

signUpButton.MouseButton1Click:Connect(function()
    local username = usernameInput.Text
    local password = passwordInput.Text

    if username == "" or password == "" then
        messageLabel.Text = "Please fill in all fields."
        return
    end

    if username == validUsername and password == validPassword then
        messageLabel.Text = "Sign Up Successful! You can now access the script."
        
        -- Proceed to load the script here
        screenGui:Destroy() -- Remove the GUI after successful sign up

        -- Aiming: Toggle camera lock
        local function toggleCamLock()
            camLocked = not camLocked
            if camLocked then
                local targetPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]
                createVisuals(targetPlayer)

                -- Use prediction values when locking camera
                local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition + Vector3.new(predictionHorizontal, predictionVertical, 0))
            else
                removeVisuals()
            end
        end

        -- Misc: Toggle fly
        local function toggleFly()
            flying = not flying
            if flying then
                player.Character.Humanoid.WalkSpeed = flySpeed
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.Velocity = Vector3.new(0, 50, 0)
                bodyVelocity.MaxForce = Vector3.new(0, 5000, 0)
                bodyVelocity.Parent = player.Character.HumanoidRootPart
                
                while flying do
                    wait(0.1)
                    bodyVelocity.Velocity = Vector3.new(mouse.Hit.p.x - player.Character.HumanoidRootPart.Position.x, 50, mouse.Hit.p.z - player.Character.HumanoidRootPart.Position.z).unit * flySpeed
                end
                bodyVelocity:Destroy()
            else
                player.Character.Humanoid.WalkSpeed = walkSpeed
            end
        end

        -- Misc: Toggle speed
        local function toggleSpeed()
            speedEnabled = not speedEnabled
            player.Character.Humanoid.WalkSpeed = speedEnabled and walkSpeed or 16
        end

        -- Teleport Function
        local function teleportTo(location)
            player.Character.HumanoidRootPart.CFrame = CFrame.new(location)
        end

        -- Open/close menu
        local function toggleMenu()
            menuOpen = not menuOpen
            screenGui.Enabled = menuOpen
        end

        -- Input handling
        local function onInputBegan(input, gameProcessed)
            if gameProcessed then return end
            
            if input.KeyCode == menuKeybind then -- Menu toggle
                toggleMenu()
            elseif input.KeyCode == Enum.KeyCode.F then -- Fly toggle
                toggleFly()
            elseif input.KeyCode == Enum.KeyCode.G then -- Speed toggle
                toggleSpeed()
            elseif input.KeyCode == Enum.KeyCode.H then -- Cam lock toggle
                toggleCamLock()
            end
        end

        -- Connect input handling
        game:GetService("UserInputService").InputBegan:Connect(onInputBegan)

        -- Slider setup
        local flySpeedSlider = script.Parent:WaitForChild("MiscFrame"):WaitForChild("FlySpeedSlider")
        local walkSpeedSlider = script.Parent:WaitForChild("MiscFrame"):WaitForChild("WalkSpeedSlider")
        local horizontalPredictionSlider = script.Parent:WaitForChild("AimingFrame"):WaitForChild("HorizontalPredictionSlider")
        local verticalPredictionSlider = script.Parent:WaitForChild("AimingFrame"):WaitForChild("VerticalPredictionSlider")

        -- Set initial values
        flySpeedSlider.Value = flySpeed
        walkSpeedSlider.Value = walkSpeed
        horizontalPredictionSlider.Value = predictionHorizontal
        verticalPredictionSlider.Value = predictionVertical

        -- Update speeds from sliders
        flySpeedSlider.Changed:Connect(function()
            flySpeed = flySpeedSlider.Value
            if flying then
                player.Character.Humanoid.WalkSpeed = flySpeed
            end
        end)

        walkSpeedSlider.Changed:Connect(function()
            walkSpeed = walkSpeedSlider.Value
            if not flying then
                player.Character.Humanoid.WalkSpeed = walkSpeed
            end
        end)

        -- Update prediction values from sliders
        horizontalPredictionSlider.Changed:Connect(function()
            predictionHorizontal = horizontalPredictionSlider.Value
        end)

        verticalPredictionSlider.Changed:Connect(function()
            predictionVertical = verticalPredictionSlider.Value
        end)

        -- GUI Button Connections
        local flyButton = script.Parent:WaitForChild("MiscFrame"):WaitForChild("FlyButton")
        local speedButton = script.Parent:WaitForChild("MiscFrame"):WaitForChild("SpeedButton")
        local camLockButton = script.Parent:WaitForChild("AimingFrame"):WaitForChild("CamLockButton")
        local setKeybindButton = script.Parent:WaitForChild("OptionsFrame"):WaitForChild("SetKeybindButton")

        flyButton.MouseButton1Click:Connect(toggleFly)
        speedButton.MouseButton1Click:Connect(toggleSpeed)
        camLockButton.MouseButton1Click:Connect(toggleCamLock)

        -- Teleport buttons
        local dbButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("DBButton")
        local revolverButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("RevolverButton")
        local tacticalShotgunButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("TacticalShotgunButton")
        local highArmourButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("HighArmourButton")
        local
local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local speedEnabled = false
local flying = false
local camLocked = false
local targetHighlight = nil
local targetNameLabel = nil
local targetBox = nil
local menuOpen = false

-- Keybind for menu
local menuKeybind = Enum.KeyCode.M

-- Speed variables
local flySpeed = 50
local walkSpeed = 16
local predictionHorizontal = 0
local predictionVertical = 0

-- Color Definitions
local highlightColor = Color3.fromRGB(255, 0, 0)  -- Red
local outlineColor = Color3.fromRGB(255, 255, 0)  -- Yellow
local nameColor = Color3.fromRGB(0, 0, 0)          -- Black
local boxColor = Color3.fromRGB(0, 255, 0)         -- Green

-- Create visual elements for target
local function createVisuals(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then return end

    -- Highlight
    targetHighlight = Instance.new("Highlight")
    targetHighlight.Parent = targetPlayer.Character
    targetHighlight.FillColor = highlightColor
    targetHighlight.OutlineColor = outlineColor
    targetHighlight.FillTransparency = 0.5

    -- Name label
    targetNameLabel = Instance.new("TextLabel")
    targetNameLabel.Size = UDim2.new(0, 100, 0, 20)
    targetNameLabel.Position = UDim2.new(0.5, -50, 0, -30)
    targetNameLabel.BackgroundTransparency = 1
    targetNameLabel.TextColor3 = nameColor
    targetNameLabel.Text = targetPlayer.Name
    targetNameLabel.Parent = player.PlayerGui:WaitForChild("ScreenGui")

    -- Box
    targetBox = Instance.new("Frame")
    targetBox.Size = UDim2.new(0, 100, 0, 100)
    targetBox.Position = UDim2.new(0.5, -50, 0, -50)
    targetBox.BackgroundColor3 = boxColor
    targetBox.BorderSizePixel = 0
    targetBox.Parent = player.PlayerGui:WaitForChild("ScreenGui")
end

-- Remove visual elements
local function removeVisuals()
    if targetHighlight then
        targetHighlight:Destroy()
        targetHighlight = nil
    end
    if targetNameLabel then
        targetNameLabel:Destroy()
        targetNameLabel = nil
    end
    if targetBox then
        targetBox:Destroy()
        targetBox = nil
    end
end

-- Aiming: Toggle camera lock
local function toggleCamLock()
    camLocked = not camLocked
    if camLocked then
        local targetPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]
        createVisuals(targetPlayer)

        -- Use prediction values when locking camera
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition + Vector3.new(predictionHorizontal, predictionVertical, 0))
    else
        removeVisuals()
    end
end

-- Misc: Toggle fly
local function toggleFly()
    flying = not flying
    if flying then
        player.Character.Humanoid.WalkSpeed = flySpeed
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 50, 0)
        bodyVelocity.MaxForce = Vector3.new(0, 5000, 0)
        bodyVelocity.Parent = player.Character.HumanoidRootPart
        
        while flying do
            wait(0.1)
            bodyVelocity.Velocity = Vector3.new(mouse.Hit.p.x - player.Character.HumanoidRootPart.Position.x, 50, mouse.Hit.p.z - player.Character.HumanoidRootPart.Position.z).unit * flySpeed
        end
        bodyVelocity:Destroy()
    else
        player.Character.Humanoid.WalkSpeed = walkSpeed
    end
end

-- Misc: Toggle speed
local function toggleSpeed()
    speedEnabled = not speedEnabled
    player.Character.Humanoid.WalkSpeed = speedEnabled and walkSpeed or 16
end

-- Teleport Function
local function teleportTo(location)
    player.Character.HumanoidRootPart.CFrame = CFrame.new(location)
end

-- Open/close menu
local function toggleMenu()
    menuOpen = not menuOpen
    script.Parent:FindFirstChild("ScreenGui").Enabled = menuOpen
end

-- Input handling
local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == menuKeybind then -- Menu toggle
        toggleMenu()
    elseif input.KeyCode == Enum.KeyCode.F then -- Fly toggle
        toggleFly()
    elseif input.KeyCode == Enum.KeyCode.G then -- Speed toggle
        toggleSpeed()
    elseif input.KeyCode == Enum.KeyCode.H then -- Cam lock toggle
        toggleCamLock()
    end
end

-- Connect input handling
game:GetService("UserInputService").InputBegan:Connect(onInputBegan)

-- Slider setup
local flySpeedSlider = script.Parent:WaitForChild("MiscFrame"):WaitForChild("FlySpeedSlider")
local walkSpeedSlider = script.Parent:WaitForChild("MiscFrame"):WaitForChild("WalkSpeedSlider")
local horizontalPredictionSlider = script.Parent:WaitForChild("AimingFrame"):WaitForChild("HorizontalPredictionSlider")
local verticalPredictionSlider = script.Parent:WaitForChild("AimingFrame"):WaitForChild("VerticalPredictionSlider")

-- Set initial values
flySpeedSlider.Value = flySpeed
walkSpeedSlider.Value = walkSpeed
horizontalPredictionSlider.Value = predictionHorizontal
verticalPredictionSlider.Value = predictionVertical

-- Update speeds from sliders
flySpeedSlider.Changed:Connect(function()
    flySpeed = flySpeedSlider.Value
    if flying then
        player.Character.Humanoid.WalkSpeed = flySpeed
    end
end)

walkSpeedSlider.Changed:Connect(function()
    walkSpeed = walkSpeedSlider.Value
    if not flying then
        player.Character.Humanoid.WalkSpeed = walkSpeed
    end
end)

-- Update prediction values from sliders
horizontalPredictionSlider.Changed:Connect(function()
    predictionHorizontal = horizontalPredictionSlider.Value
end)

verticalPredictionSlider.Changed:Connect(function()
    predictionVertical = verticalPredictionSlider.Value
end)

-- GUI Button Connections
local flyButton = script.Parent:WaitForChild("MiscFrame"):WaitForChild("FlyButton")
local speedButton = script.Parent:WaitForChild("MiscFrame"):WaitForChild("SpeedButton")
local camLockButton = script.Parent:WaitForChild("AimingFrame"):WaitForChild("CamLockButton")
local setKeybindButton = script.Parent:WaitForChild("OptionsFrame"):WaitForChild("SetKeybindButton")

flyButton.MouseButton1Click:Connect(toggleFly)
speedButton.MouseButton1Click:Connect(toggleSpeed)
camLockButton.MouseButton1Click:Connect(toggleCamLock)

-- Teleport buttons
local dbButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("DBButton")
local revolverButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("RevolverButton")
local tacticalShotgunButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("TacticalShotgunButton")
local highArmourButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("HighArmourButton")
local rpgButton = script.Parent:WaitForChild("WorldFrame"):WaitForChild("RPGButton")

dbButton.MouseButton1Click:Connect(function() teleportTo(Vector3.new(0, 0, 0)) end) -- Replace with actual DB location
revolverButton.MouseButton1Click:Connect(function() teleportTo(Vector3.new(0, 0, 0)) end) -- Replace with actual Revolver location
tacticalShotgunButton.MouseButton1Click:Connect(function() teleportTo(Vector3.new(0, 0, 0)) end) -- Replace with actual Tactical Shotgun location
highArmourButton.MouseButton1Click:Connect(function() teleportTo(Vector3.new(0, 0, 0)) end) -- Replace with actual High Armour location
rpgButton.MouseButton1Click:Connect(function() teleportTo(Vector3.new(0, 0, 0)) end) -- Replace with actual RPG location

-- Setting keybind functionality
setKeybindButton.MouseButton1Click:Connect(function()
    -- Allow the user to set a new keybind
    local newKeybind = game:GetService("UserInputService").InputBegan:Wait()
    menuKeybind = newKeybind.KeyCode
    print("New keybind set to: " .. tostring(menuKeybind))
end)

-- Set the color of the HVH text
local hVHTextLabel = script.Parent:WaitForChild("HVHTextLabel")
hVHTextLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black

-- Add section and footer labels
local sectionLine = Instance.new("Frame")
sectionLine.Size = UDim2.new(0, 2, 1, 0)
sectionLine.Position = UDim2.new(0.3, 0, 0, 0)
sectionLine.Parent = script.Parent:WaitForChild("
